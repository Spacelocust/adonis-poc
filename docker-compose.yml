version: '3.4'

networks:
  api-network:
    driver: bridge

services:
  nginx-api-service:
    image: nginx:stable-alpine
    container_name: nginx-api-container
    ports:
      - "80:80"
    volumes:
      - ./api/:/app
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    environment:
      VIRTUAL_HOST: api-tech.co
      VIRTUAL_PORT: 7800
    depends_on:
      - node-api-service
      - mysql-api-service
    networks:
      - api-network

  node-api-service:
    build:
      context: ./docker/node
    container_name: node-api-container
    entrypoint: [ "/bin/bash", "-c", "yarn install && yarn dev" ]
    ports:
      - "3000:3333"
    volumes:
      - ./api/:/app
    environment:
      VIRTUAL_HOST: api-tech.co
      VIRTUAL_PORT: 3000
    working_dir: /app
    networks:
      - api-network

  mysql-api-service:
    image: mysql:8.0
    container_name: mysql-api-container
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - "4306:3306"
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: api-tech
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
    networks:
      - api-network

  pma-api-service:
    image: phpmyadmin/phpmyadmin
    container_name: pma-api-container
    ports:
      - "8080:80"
    restart: always
    environment:
      PMA_HOST: mysql-api-service
      PMA_USER: root
      PMA_PASSWORD: root
      PMA_PMADB: phpmyadmin
      MYSQL_ROOT_PASSWORD: root
    networks:
      - api-network
